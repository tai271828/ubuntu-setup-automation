#!/bin/bash

MIRROR_HOSTNAME=${MIRROR_HOSTNAME:-releases.ubuntu.com}
MIRROR_DIRECTORY=${MIRROR_DIRECTORY:-/releases}
MIRROR_PREFIX="http://${MIRROR_HOSTNAME}${MIRROR_DIRECTORY}"

DEFAULT_RELEASE="14.04.5"
DEFAULT_TYPE="desktop"
DEFAULT_ARCHITECTURE="amd64"

DATA_DIR="$(dirname $(dirname $0))/data"

PATH=$(dirname $0):$PATH

function usage() {
  local usage="Usage: `basename $0` [-r release] [-t server_desktop_type] [-a arch]"
  echo $usage
  exit
}

function patch_iso() {
  # patch iso so it could automate grub and preseed
  cp ${DATA_DIR}/txt.cfg ${tempd}/${iso_prefix}/isolinux/txt.cfg
  cp ${DATA_DIR}/patch.preseed ${tempd}/${iso_prefix}/preseed/
}

function rebuild_iso() {
  # rebuild an iso from the extracted data
  local iso_extract="${tempd}/${iso_prefix}"
  local isolinux_dir="${iso_extract}/isolinux"
  mkisofs -D -r -V "UNATTENDED_UBUNTU" -cache-inodes -J -l \
          -b isolinux/isolinux.bin -c isolinux/boot.cat \
          -no-emul-boot -boot-load-size 4 -boot-info-table \
          -o ${tempd}/ubuntu16-desktop-unattended-install.iso \
          ${iso_extract}
}

while [[ $# -gt 0  ]]; do
  key="$1"
  case $key in
    -r|--release)
    RELEASE="$2"
    shift
    ;;
    -y|--release-type)
    RELEASE_TYPE="$2"
    shift
    ;;
    -a|--arch)
    RELEASE_ARCH="$2"
    shift
    ;;
    -h|--help)
    help="1"
    ;;
  esac
  # past argument or value
  shift
done

if [[ -n "$help" ]]; then
  usage
  exit
fi

if [[ -z "$RELEASE" ]]; then
  RELEASE=${DEFAULT_RELEASE}
fi

if [[ -z "$RELEASE_TYPE" ]]; then
  RELEASE_TYPE=${DEFAULT_TYPE}
fi

if [[ -z "$RELEASE_ARCH" ]]; then
  RELEASE_ARCH="amd64"
fi

iso_prefix="ubuntu-${RELEASE}-${RELEASE_TYPE}-${RELEASE_ARCH}"
iso_ext="iso"
iso_name="${iso_prefix}.${iso_ext}"
iso_download_url=${MIRROR_PREFIX}/${RELEASE}/${iso_name}

tempd=$(mktemp -d /tmp/automatic-ubuntu-XXXXXX)
echo "Begin to download image to $tempd"
wget -O $tempd/${iso_name} $iso_download_url
if [[ "$?" -ne 0 ]]; then
  echo "Failed to download the image from ${iso_download_url}"
  exit
fi
echo "${iso_download_url} is downloaded under ${tempd}"

echo "Begin to patch the image"

echo "Extracting data..."
mkdir -p ${tempd}/${iso_prefix}
extract-iso ${tempd}/${iso_name} -d ${tempd}/${iso_prefix}

echo "Patching..."
patch_iso

echo "Re-generate the iso"
rebuild_iso

echo "Done. Your new image is ${tempd}/ubuntu16-desktop-unattended-install.iso"
